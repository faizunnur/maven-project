name: Java CI/CD with Maven


on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

  
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Maven packages #save cheche
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Checkout Code #clone code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven #build our maven project
        run: mvn -B package --file pom.xml

      - name: Upload Application JAR
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar

      - name: Upload Code Coverage Report # tell us code coverage
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco

  sonarqube_analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os}}-sonar
          restore-keys: ${{ runner.os}}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Analyze with SonarCloud
        run: |
           mvn -B verify sonar:sonar \
           -Dsonar.projectKey=faizunnur \
           -Dsonar.organization=faizunnur \
           -Dsonar.host.url=https://sonarcloud.io \
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download JAR artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
      
      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          files: '*.jar'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }}

  issue-on-failure: # create issue if build fails
    runs-on: ubuntu-latest
    needs: build
    if: failure() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Create GitHub Issue via API
        run: |
          curl --request POST \
          --url "${{ github.api_url }}/repos/${{ github.repository }}/issues" \
          --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          --header "Accept: application/vnd.github+json" \
          --header "Content-Type: application/json" \
          --data @- <<EOF
          {
            "title": " Build Failed on main branch",
            "body": "The build for commit ${{ github.sha }} failed.\n- **Triggered by:** ${{ github.actor }}\n- **See the failed workflow run:** [Click Here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})",
            "labels": ["bug", "build-failure"],
            "assignees": ["${{ github.actor }}"]
          }
          EOF